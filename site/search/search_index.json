{
    "docs": [
        {
            "location": "/", 
            "text": "eBGP Peering Basics\n\n\nIntroduction\n\n\neBGP or External BGP is peering with a BGP Speaker that is outside of the\nLocal BGP Speaker's Autonomous System. In other words, this is an\ninter-AS peering between 2 BGP networks.\n\n\n\n\n\n\n\n\nBGP IP Address\n\n\nASN\n\n\n\n\n\n\n\n\n\n\n54.0.10.0.254\n\n\n4500\n\n\n\n\n\n\n54.0.10.0.253\n\n\n25467\n\n\n\n\n\n\n\n\nConfiguration for .254\n\n\n1\n2\nrouter bgp \n4500\n\nneighbor \n54\n.0.10.0.254 as \n25467\n\n\n\n\n\n\n\nCurrent GIS solution are mostly tackling big data related requirements in\nterms of data volume or data velocity. In the era of cloud computing,\nleveraging cloud-based resources is a widely adopted pattern. In addition,\nwith the advent of big data analytics, performing massively parallel\nanalytical tasks on large-scale data at rest or data in motion is as well\nbecoming a feasible approach shaping the design of today\u2019s GIS. Although\nscaling out enables GIS to tackle the aforementioned big data induced\nrequirements, there are still two major open issues. Firstly, dealing with\nvarying data types across multiple data sources (variety) lead to data and\nschema heterogeneity, e.g., to describe locations such as addresses, relative\nspatial relationships or different coordinates reference systems. Secondly,\nmodeling the inherent uncertainties in data (veracity), e.g., real-world\nnoise and erroneous values due to the nature of the data collecting process.\nBoth being crucial tasks in data management and analytics that directly\naffect the information retrieval and decision-making quality and moreover\nthe generated knowledge on human-side (value). By leveraging the the\ncontinuous refinement model, we present a holistic approach that explicitly\ndeals with all big data dimensions. By integrating the user in the\nprocess, computers can learn from the cognitive and perceptive skills of\nhuman analysis to create hidden connections between data and the problem\ndomain. This helps to decrease the noise and uncertainty and allows to\nbuild up trust in the analysis results on user side which will eventually\nlead to an increasing likelihood of relevant findings and generated\nknowledge.\n\n\nContact and Support\n\n\n\n\n\n\n\n\nRole\n\n\nName\n\n\nE-mail\n\n\n\n\n\n\n\n\n\n\nContact person\n\n\nProf. Dr. Thomas Setzer\n\n\nsetzer@fzi.de\n\n\n\n\n\n\nProject coordination\n\n\nDr. Viliam Simko\n\n\nsimko@fzi.de", 
            "title": "eBGP Peering Basics"
        }, 
        {
            "location": "/#ebgp-peering-basics", 
            "text": "", 
            "title": "eBGP Peering Basics"
        }, 
        {
            "location": "/#introduction", 
            "text": "eBGP or External BGP is peering with a BGP Speaker that is outside of the\nLocal BGP Speaker's Autonomous System. In other words, this is an\ninter-AS peering between 2 BGP networks.     BGP IP Address  ASN      54.0.10.0.254  4500    54.0.10.0.253  25467", 
            "title": "Introduction"
        }, 
        {
            "location": "/#configuration-for-254", 
            "text": "1\n2 router bgp  4500 \nneighbor  54 .0.10.0.254 as  25467    Current GIS solution are mostly tackling big data related requirements in\nterms of data volume or data velocity. In the era of cloud computing,\nleveraging cloud-based resources is a widely adopted pattern. In addition,\nwith the advent of big data analytics, performing massively parallel\nanalytical tasks on large-scale data at rest or data in motion is as well\nbecoming a feasible approach shaping the design of today\u2019s GIS. Although\nscaling out enables GIS to tackle the aforementioned big data induced\nrequirements, there are still two major open issues. Firstly, dealing with\nvarying data types across multiple data sources (variety) lead to data and\nschema heterogeneity, e.g., to describe locations such as addresses, relative\nspatial relationships or different coordinates reference systems. Secondly,\nmodeling the inherent uncertainties in data (veracity), e.g., real-world\nnoise and erroneous values due to the nature of the data collecting process.\nBoth being crucial tasks in data management and analytics that directly\naffect the information retrieval and decision-making quality and moreover\nthe generated knowledge on human-side (value). By leveraging the the\ncontinuous refinement model, we present a holistic approach that explicitly\ndeals with all big data dimensions. By integrating the user in the\nprocess, computers can learn from the cognitive and perceptive skills of\nhuman analysis to create hidden connections between data and the problem\ndomain. This helps to decrease the noise and uncertainty and allows to\nbuild up trust in the analysis results on user side which will eventually\nlead to an increasing likelihood of relevant findings and generated\nknowledge.", 
            "title": "Configuration for .254"
        }, 
        {
            "location": "/#contact-and-support", 
            "text": "Role  Name  E-mail      Contact person  Prof. Dr. Thomas Setzer  setzer@fzi.de    Project coordination  Dr. Viliam Simko  simko@fzi.de", 
            "title": "Contact and Support"
        }, 
        {
            "location": "/docs-howto/", 
            "text": "Documentation Howto\n\n\nWe use \nmkdocs\n for documenting the project.\nThe goal is to make the documentation process as simple as possible,\nto allow versioning and to use pull requests for text reviews.\nI should edit the docs locally, preview it in a browser and then suggest a pull request.\n\n\nThe amount of formatting elements is deliberately small.\nApart from wiki, we try to keep each page self contained and to minimize\ninterlinking between pages because it only complicates reading of the docs.\n\n\nThe documentation is written as a set of Markdown files within the \ndocs/\n directory\nand after deployment available as a static website: \nDocs Website\n.\n\n\nBefore building the docs\n\n\nFirst of all, you need \npython 3\n and \npip3\n to be installed.\n(On some Linux distros, you need to use pip3 instead of pip)\n\n\nUsing pip, you need to install the following packages:\n\n\n\n\nmkdocs\n : Provides the executable command \nmkdocs\n.\n\n\nmkdocs-material\n : A material design theme. See also \nthis page\n.\n\n\npyembed-markdown\n : A markdown extension that allows for embedding Youtube videos in documents.\n                         See also \nthis page\n.\n\n\nmkdocs-awesome-pages-plugin\n : This plugin automatically generates the pages section from directory structure.\n  (For more info see \nthis github repository\n)\n\n\n\n\n\n\nHow to install as a user (recommended)\n\n\nYou can install the packages locally as a user into \n~/.local/\n\n\nsh\npip3 install --user mkdocs\npip3 install --user mkdocs-material\npip3 install --user pyembed-markdown\npip3 install --user mkdocs-awesome-pages-plugin\n\n\n\n\n\n\nHow to install system-wide as root (not recommended)\n\n\nsh\npip3 install mkdocs\npip3 install mkdocs-material\npip3 install pyembed-markdown\npip3 install mkdocs-awesome-pages-plugin\n\n\n\n\n\n\nHow to upgrade (as a user)\n\n\nMake sure you are using \nmkdocs version 0.17.2+\n.\n\nsh\npip3 install -U --user mkdocs\npip3 install -U --user mkdocs-material\npip3 install -U --user pyembed-markdown\npip3 install -U --user mkdocs-awesome-pages-plugin\n\n\n\n\nRecommended editor\n\n\nSince we use the markdown format, you can use any plain text editor.\nHowever, we suggest to use \nIntelliJ IDEA\n\nwith the \nMarkdown Support plugin\n (both are free) which gives you:\n\n\n\n\nsyntax highlighting\n\n\npath completion of links such as image file names\n\n\nrefactoring, which is handy when renaming markdown files which are liked from other files\n\n\nfancy search\n\n\noutline of the document structure\n\n\nautomated simplified preview (which is not that important due to the mkdocs hot-reload)\n\n\n\n\nHow to edit\n\n\nBefore editing the documentation, start the live-reloading docs server\nusing \nmkdocs serve\n within the project root directory.\nThen, open the page \nhttp://127.0.0.1:8000\n in your\nbrowser and watch your edits being reloaded automatically.\n\n\n1\nmkdocs serve\n\n\n\n\n\n\nINFO    -  Building documentation... \nINFO    -  Cleaning site directory \n[I 171024 15:03:51 server:283] Serving on http://127.0.0.1:8000\n[I 171024 15:03:51 handlers:60] Start watching changes\n\n\n\n\n\nYou can now edit the markdown documents within the \ndocs/\n directory.\n\n\nDeployment\n\n\n\n\nWarning\n\n\nThis operation is relevant only to the administrators of the \nbiggis-docs\n repository.\nAs a regular contributor, you should only preview your local changes and push them to the\n\nmaster\n branch or through pull request instead of directly deploying the built docs to the\n\ngh-pages\nbranch.\n\n\n\n\nThe deployment is about building the HTML version out of the markdown sources from\nthe \nmaster\n git branch and and pushing the generated content to the \ngh-pages\n branch.\nGithub then makes this new version available online.\n\n\nThe responsible person then uses the command \nmkdocs gh-deploy\n to generate a static \nDocs Website\n\nand deploy it automatically as a github page (served from \ngh-pages\n branch).\n\n\n\n\nInfo\n\n\nThe newly deployed version appears after few seconds.\n\n\n\n\nDocumentation layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n  index.md    # The documentation homepage.\n  ...         # Other markdown pages, images and other files.\n\n\n\n\n\nFor the sake of simplicity, we use the following hierarchy inside \ndocs/\n:\n\n\n\n\nLevel 1\n : areas (directories) that appear in the main menu.\n\n\nLevel 2\n : pages (markdown files) that appear in the left side bar.\n\n\nLevel 3\n : headings (H1, H2, ...) that appear in the table of contents on the right\n\n\n\n\n\n\nWarning\n\n\nDo not use spaces in file names. Replace them with dashes \n-\n (or alternatively with underscores \n_\n).\nThis allows for easier refactoring because spaces are usually transformed to \n%20\n in markdown which looks weird.\n\n\n\n\nFormatting examples\n\n\n??? summary \"Sectioning, Headings and Table of Contents\"\n\n\n    # Chapter\n\n    ## Section\n\n    ### Subsection\n\nTable of contents is generated automatically from the document structure.\n\n\n\n\n\n??? summary \"Footnotes\"\n\n\n    Some text with a footnote[^LABEL]\n\n    [^LABEL]: Text of the footnote\n\nSee also https://squidfunk.github.io/mkdocs-material/extensions/footnotes/\n\n\n\n\n\n??? summary \"Citations, Notes and Admonition\"\n\n\n    !!! cite\n        Here comes the citation including authors, title, year, doi, url ...\n\n!!! cite\n    Here comes the citation including authors, title, year, doi, url ...\n\n---\n\n    !!! note\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n        nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n        massa, nec semper lorem quam in massa.\n\n!!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n---\nFor more options see https://squidfunk.github.io/mkdocs-material/extensions/admonition/\n\n\n\n\n\n??? summary \"Collapsible blocks\"\n\n\n    ??? \nPhasellus posuere in sem ut cursus\n\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n        nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n        massa, nec semper lorem quam in massa.\n\n??? \nPhasellus posuere in sem ut cursus\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nFor more information see https://facelessuser.github.io/pymdown-extensions/extensions/details/\n\n\n\n\n\n??? summary \"Images\"\n\n\nYou can include images into the documentation in the following format:\n\n  - **SVG** (scalable vectors).\n  - **JPG** (photos)\n  - **PNG** (raster graphics)\n\nIn contrast to scientific papers, it is not possible to create references to numbered figures in markdown.\n\n    ![Image \nalt\n description](path/to/image.svg)\n\n\n![Sample image](http://www.gstatic.com/webp/gallery/1.jpg)\n\nSee also http://www.mkdocs.org/user-guide/writing-your-docs/#images-and-media\n\n!!! note\n    When editing a file e.g. `path/to/ABC.md`, store all related images in the same\n    folder (`path/to/ABC`). This way, different topics are better encapsulated.\n\n\n\n\n\n??? summary \"Figures with caption (on top)\"\n\n\nYou can create images with a nice looking caption and additional description.\n\n    !!! info \nFigure: Here comes a single line title\n\n        ![](path/to/image.svg)\n\n        Here comes some additional multi-line text.\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n        Morbi et iaculis mi, ut interdum risus. Nulla facilisis viverra felis tincidunt sagittis.\n\n!!! info \nFigure: Here comes a single line title\n\n    ![](http://www.gstatic.com/webp/gallery/1.jpg)\n\n    Here comes some additional multi-line text.\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n    Morbi et iaculis mi, ut interdum risus. Nulla facilisis viverra felis tincidunt sagittis.\n\n\n\n\n\n??? summary \"Tables\"\n\n\n    First Header | Second Header | Third Header\n    ------------ | ------------- | ------------\n    Content Cell | Content Cell  | Content Cell\n    Content Cell | Content Cell  | Content Cell\n\nFirst Header | Second Header | Third Header\n------------ | ------------- | ------------\nContent Cell | Content Cell  | Content Cell\nContent Cell | Content Cell  | Content Cell\n\nSee also http://www.mkdocs.org/user-guide/writing-your-docs/#tables\n\n\n\n\n\n??? summary \"Tables with alignment\"\n\n\n    Left         | Center        | Right\n    ---          |:--            |--:\n    Content Cell | Content Cell  | Content Cell\n    Content Cell | Content Cell  | Content Cell\n\nLeft         | Center        | Right\n---          |:--            |--:\nContent Cell | Content Cell  | Content Cell\nContent Cell | Content Cell  | Content Cell\n\nSee also http://www.mkdocs.org/user-guide/writing-your-docs/#tables\n\n\n\n\n\n??? summary \"Mathematical Formulas\"\n\n\nFormula are generated using [MathJax](https://www.mathjax.org/), which is similar to LaTeX.\nSee also this [quick reference](https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference).\n\n    $$\n    \\frac{n!}{k!(n-k)!} = \\binom{n}{k}\n    $$\n\n$$\n\\frac{n!}{k!(n-k)!} = \\binom{n}{k}\n$$\n\n\n\n\n\n??? summary \"Source Code with Code Highlighting\"\n\n\nCode can be displayed inline like this:\n\n    `print 1+{variable}`\n\nOr it can be displayed in a code block with optional syntax highlighting if the language is specified.\n\n    ```python\n    def my_function():\n        \njust a test\n\n        print 8/2 \n    ```\n\n```python\ndef my_function():\n    \njust a test\n\n    print 8/2 \n```\n\nOther useful langauge codes are:\n\n  - **sh** : source code written in shell script\n  - **console**: commands written to console, e.g.: `$ cat /dev/urandom`\n  - **json**: data in JSON format\n  - **javascript**: JavaScript source code\n\n\n\n\n\n??? summary \"Smart Symbols\"\n\n\n    Some smart symbols: --\n,  \n--, 1st, 2nd, 1/4\n\nSome smart symbols: --\n,  \n--, 1st, 2nd, 1/4\n\nSee also https://facelessuser.github.io/pymdown-extensions/extensions/smartsymbols/\n\n\n\n\n\n??? summary \"Sequence diagrams\"\n\n\n~~~.markdown\n```sequence\nTitle: Example sequence diagram\nA-\nB: Sync call\nB--\nA: Sync return\nA-\nC: Another sync call\nC-\nD: Async call\nD--\nC: Async return\n```\n~~~\n\n```sequence\nTitle: Example sequence diagram\nA-\nB: Sync call\nB--\nA: Sync return\nA-\nC: Another sync call\nC-\nD: Async call\nD--\nC: Async return\n```\n\n\n\n\n\n??? summary \"Embedded Youtube Videos\"\n        \n!embed\n\n    \n!embed\n\n\nFor more information see https://pyembed.github.io/usage/markdown/\n\n\n\n\n\n??? summary \"HTML (please only in special cases)\"\n\n\nIn special cases, you can also use raw HTML in your document.\n\n     \nstyle\n.special img {height:32px; vertical-align:middle}\n/style\n\n     \ndiv class=\nspecial\n\n       [![](https://www.gstatic.com/webp/gallery3/5.png)](https://developers.google.com/speed/webp/gallery2)\n       Click on this icon\n     \n/div\n\n\n \nstyle\n.special img {height:32px; vertical-align:middle}\n/style\n\n \ndiv class=\nspecial\n\n   [![](https://www.gstatic.com/webp/gallery3/5.png)](https://developers.google.com/speed/webp/gallery2)\n   Click on this icon\n \n/div", 
            "title": "Documentation Howto"
        }, 
        {
            "location": "/docs-howto/#documentation-howto", 
            "text": "We use  mkdocs  for documenting the project.\nThe goal is to make the documentation process as simple as possible,\nto allow versioning and to use pull requests for text reviews.\nI should edit the docs locally, preview it in a browser and then suggest a pull request.  The amount of formatting elements is deliberately small.\nApart from wiki, we try to keep each page self contained and to minimize\ninterlinking between pages because it only complicates reading of the docs.  The documentation is written as a set of Markdown files within the  docs/  directory\nand after deployment available as a static website:  Docs Website .", 
            "title": "Documentation Howto"
        }, 
        {
            "location": "/docs-howto/#before-building-the-docs", 
            "text": "First of all, you need  python 3  and  pip3  to be installed.\n(On some Linux distros, you need to use pip3 instead of pip)  Using pip, you need to install the following packages:   mkdocs  : Provides the executable command  mkdocs .  mkdocs-material  : A material design theme. See also  this page .  pyembed-markdown  : A markdown extension that allows for embedding Youtube videos in documents.\n                         See also  this page .  mkdocs-awesome-pages-plugin  : This plugin automatically generates the pages section from directory structure.\n  (For more info see  this github repository )    How to install as a user (recommended)  You can install the packages locally as a user into  ~/.local/  sh\npip3 install --user mkdocs\npip3 install --user mkdocs-material\npip3 install --user pyembed-markdown\npip3 install --user mkdocs-awesome-pages-plugin    How to install system-wide as root (not recommended)  sh\npip3 install mkdocs\npip3 install mkdocs-material\npip3 install pyembed-markdown\npip3 install mkdocs-awesome-pages-plugin    How to upgrade (as a user)  Make sure you are using  mkdocs version 0.17.2+ . sh\npip3 install -U --user mkdocs\npip3 install -U --user mkdocs-material\npip3 install -U --user pyembed-markdown\npip3 install -U --user mkdocs-awesome-pages-plugin", 
            "title": "Before building the docs"
        }, 
        {
            "location": "/docs-howto/#recommended-editor", 
            "text": "Since we use the markdown format, you can use any plain text editor.\nHowever, we suggest to use  IntelliJ IDEA \nwith the  Markdown Support plugin  (both are free) which gives you:   syntax highlighting  path completion of links such as image file names  refactoring, which is handy when renaming markdown files which are liked from other files  fancy search  outline of the document structure  automated simplified preview (which is not that important due to the mkdocs hot-reload)", 
            "title": "Recommended editor"
        }, 
        {
            "location": "/docs-howto/#how-to-edit", 
            "text": "Before editing the documentation, start the live-reloading docs server\nusing  mkdocs serve  within the project root directory.\nThen, open the page  http://127.0.0.1:8000  in your\nbrowser and watch your edits being reloaded automatically.  1 mkdocs serve   INFO    -  Building documentation... \nINFO    -  Cleaning site directory \n[I 171024 15:03:51 server:283] Serving on http://127.0.0.1:8000\n[I 171024 15:03:51 handlers:60] Start watching changes  You can now edit the markdown documents within the  docs/  directory.", 
            "title": "How to edit"
        }, 
        {
            "location": "/docs-howto/#deployment", 
            "text": "Warning  This operation is relevant only to the administrators of the  biggis-docs  repository.\nAs a regular contributor, you should only preview your local changes and push them to the master  branch or through pull request instead of directly deploying the built docs to the gh-pages branch.   The deployment is about building the HTML version out of the markdown sources from\nthe  master  git branch and and pushing the generated content to the  gh-pages  branch.\nGithub then makes this new version available online.  The responsible person then uses the command  mkdocs gh-deploy  to generate a static  Docs Website \nand deploy it automatically as a github page (served from  gh-pages  branch).   Info  The newly deployed version appears after few seconds.", 
            "title": "Deployment"
        }, 
        {
            "location": "/docs-howto/#documentation-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n  index.md    # The documentation homepage.\n  ...         # Other markdown pages, images and other files.  For the sake of simplicity, we use the following hierarchy inside  docs/ :   Level 1  : areas (directories) that appear in the main menu.  Level 2  : pages (markdown files) that appear in the left side bar.  Level 3  : headings (H1, H2, ...) that appear in the table of contents on the right    Warning  Do not use spaces in file names. Replace them with dashes  -  (or alternatively with underscores  _ ).\nThis allows for easier refactoring because spaces are usually transformed to  %20  in markdown which looks weird.", 
            "title": "Documentation layout"
        }, 
        {
            "location": "/docs-howto/#formatting-examples", 
            "text": "??? summary \"Sectioning, Headings and Table of Contents\"      # Chapter\n\n    ## Section\n\n    ### Subsection\n\nTable of contents is generated automatically from the document structure.  ??? summary \"Footnotes\"      Some text with a footnote[^LABEL]\n\n    [^LABEL]: Text of the footnote\n\nSee also https://squidfunk.github.io/mkdocs-material/extensions/footnotes/  ??? summary \"Citations, Notes and Admonition\"      !!! cite\n        Here comes the citation including authors, title, year, doi, url ...\n\n!!! cite\n    Here comes the citation including authors, title, year, doi, url ...\n\n---\n\n    !!! note\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n        nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n        massa, nec semper lorem quam in massa.\n\n!!! note\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\n---\nFor more options see https://squidfunk.github.io/mkdocs-material/extensions/admonition/  ??? summary \"Collapsible blocks\"      ???  Phasellus posuere in sem ut cursus \n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n        nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n        massa, nec semper lorem quam in massa.\n\n???  Phasellus posuere in sem ut cursus \n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n\nFor more information see https://facelessuser.github.io/pymdown-extensions/extensions/details/  ??? summary \"Images\"  You can include images into the documentation in the following format:\n\n  - **SVG** (scalable vectors).\n  - **JPG** (photos)\n  - **PNG** (raster graphics)\n\nIn contrast to scientific papers, it is not possible to create references to numbered figures in markdown.\n\n    ![Image  alt  description](path/to/image.svg)\n\n\n![Sample image](http://www.gstatic.com/webp/gallery/1.jpg)\n\nSee also http://www.mkdocs.org/user-guide/writing-your-docs/#images-and-media\n\n!!! note\n    When editing a file e.g. `path/to/ABC.md`, store all related images in the same\n    folder (`path/to/ABC`). This way, different topics are better encapsulated.  ??? summary \"Figures with caption (on top)\"  You can create images with a nice looking caption and additional description.\n\n    !!! info  Figure: Here comes a single line title \n        ![](path/to/image.svg)\n\n        Here comes some additional multi-line text.\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n        Morbi et iaculis mi, ut interdum risus. Nulla facilisis viverra felis tincidunt sagittis.\n\n!!! info  Figure: Here comes a single line title \n    ![](http://www.gstatic.com/webp/gallery/1.jpg)\n\n    Here comes some additional multi-line text.\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n    Morbi et iaculis mi, ut interdum risus. Nulla facilisis viverra felis tincidunt sagittis.  ??? summary \"Tables\"      First Header | Second Header | Third Header\n    ------------ | ------------- | ------------\n    Content Cell | Content Cell  | Content Cell\n    Content Cell | Content Cell  | Content Cell\n\nFirst Header | Second Header | Third Header\n------------ | ------------- | ------------\nContent Cell | Content Cell  | Content Cell\nContent Cell | Content Cell  | Content Cell\n\nSee also http://www.mkdocs.org/user-guide/writing-your-docs/#tables  ??? summary \"Tables with alignment\"      Left         | Center        | Right\n    ---          |:--            |--:\n    Content Cell | Content Cell  | Content Cell\n    Content Cell | Content Cell  | Content Cell\n\nLeft         | Center        | Right\n---          |:--            |--:\nContent Cell | Content Cell  | Content Cell\nContent Cell | Content Cell  | Content Cell\n\nSee also http://www.mkdocs.org/user-guide/writing-your-docs/#tables  ??? summary \"Mathematical Formulas\"  Formula are generated using [MathJax](https://www.mathjax.org/), which is similar to LaTeX.\nSee also this [quick reference](https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference).\n\n    $$\n    \\frac{n!}{k!(n-k)!} = \\binom{n}{k}\n    $$\n\n$$\n\\frac{n!}{k!(n-k)!} = \\binom{n}{k}\n$$  ??? summary \"Source Code with Code Highlighting\"  Code can be displayed inline like this:\n\n    `print 1+{variable}`\n\nOr it can be displayed in a code block with optional syntax highlighting if the language is specified.\n\n    ```python\n    def my_function():\n         just a test \n        print 8/2 \n    ```\n\n```python\ndef my_function():\n     just a test \n    print 8/2 \n```\n\nOther useful langauge codes are:\n\n  - **sh** : source code written in shell script\n  - **console**: commands written to console, e.g.: `$ cat /dev/urandom`\n  - **json**: data in JSON format\n  - **javascript**: JavaScript source code  ??? summary \"Smart Symbols\"      Some smart symbols: -- ,   --, 1st, 2nd, 1/4\n\nSome smart symbols: -- ,   --, 1st, 2nd, 1/4\n\nSee also https://facelessuser.github.io/pymdown-extensions/extensions/smartsymbols/  ??? summary \"Sequence diagrams\"  ~~~.markdown\n```sequence\nTitle: Example sequence diagram\nA- B: Sync call\nB-- A: Sync return\nA- C: Another sync call\nC- D: Async call\nD-- C: Async return\n```\n~~~\n\n```sequence\nTitle: Example sequence diagram\nA- B: Sync call\nB-- A: Sync return\nA- C: Another sync call\nC- D: Async call\nD-- C: Async return\n```  ??? summary \"Embedded Youtube Videos\"\n         !embed \n     !embed  For more information see https://pyembed.github.io/usage/markdown/  ??? summary \"HTML (please only in special cases)\"  In special cases, you can also use raw HTML in your document.\n\n      style .special img {height:32px; vertical-align:middle} /style \n      div class= special \n       [![](https://www.gstatic.com/webp/gallery3/5.png)](https://developers.google.com/speed/webp/gallery2)\n       Click on this icon\n      /div \n\n  style .special img {height:32px; vertical-align:middle} /style \n  div class= special \n   [![](https://www.gstatic.com/webp/gallery3/5.png)](https://developers.google.com/speed/webp/gallery2)\n   Click on this icon\n  /div", 
            "title": "Formatting examples"
        }
    ]
}